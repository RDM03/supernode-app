name: flutter pipeline
on:
  pull_request:

jobs:
  build_apk:
    name: Build flutter (Android)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '8.x' #https://github.com/subosito/flutter-action/issues/58
    - name: Setup subosito/flutter-action@v1
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.20'
    - name: Clean workspace
      run: flutter clean
    - name: Install NDK (workaround to https://github.com/gradle/gradle/issues/12440)
      run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
    - name: create env file
      run: |
        touch assets/.env
        echo "APPCENTER_BUILD_ID=${{ secrets.APPCENTER_BUILD_ID }}" > assets/.env
        echo "APPCENTER_KEYSTORE_PASSWORD=${{ secrets.APPCENTER_KEYSTORE_PASSWORD }}" >> assets/.env
        echo "APPCENTER_KEY_ALIAS=${{ secrets.APPCENTER_KEY_ALIAS }}" >> assets/.env
        echo "APPCENTER_KEY_PASSWORD=${{ secrets.APPCENTER_KEY_PASSWORD }}" >> assets/.env
        echo "JIRA_AUTH=${{ secrets.JIRA_AUTH }}" > assets/.env
        echo "JIRA_PROJECT_KEY=${{ secrets.JIRA_PROJECT_KEY }}" >> assets/.env
        echo "MAP_BOX_ACCESS_TOKEN=${{ secrets.MAP_BOX_ACCESS_TOKEN }}" >> assets/.env
        echo "APPCENTER_SECRET_ANDROID=${{ secrets.APPCENTER_SECRET_ANDROID }}" >> assets/.env
        echo "APPCENTER_SECRET_IOS=${{ secrets.APPCENTER_SECRET_IOS }}" > assets/.env
        echo "APPCENTER_TOKEN_ANDROID=${{ secrets.APPCENTER_TOKEN_ANDROID }}" >> assets/.env
        echo "APPCENTER_TOKEN_IOS=${{ secrets.APPCENTER_TOKEN_IOS }}" >> assets/.env
        echo "APPCENTER_APPID_IOS=${{ secrets.APPCENTER_APPID_IOS }}" >> assets/.env        
    - name: Build APK
      run: flutter build apk --flavor prod
      env:
        APPCENTER_BUILD_ID: ${{ secrets.APPCENTER_BUILD_ID}}
        APPCENTER_KEYSTORE_PASSWORD: ${{ secrets.APPCENTER_KEYSTORE_PASSWORD}}
        APPCENTER_KEY_ALIAS: ${{ secrets.APPCENTER_KEY_ALIAS}}
        APPCENTER_KEY_PASSWORD: ${{ secrets.APPCENTER_KEY_PASSWORD}}
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: apk-build
        path: build/app/outputs/flutter-apk

  build_ios:
    name: Drive&Build flutter (IOS)
    strategy:
      matrix:
        device:
        - "iPhone 8 (13.7)"
        - "iPhone 11 Pro Max (13.7)"
      fail-fast: false
    runs-on: self-hosted
    steps:
    - name: "List all simulators"
      run: "xcrun instruments -s"
    - name: "Start Simulator"
      run: |
        UDID=$(
          xcrun instruments -s |
          awk \
            -F ' *[][]' \
            -v 'device=${{ matrix.device }}' \
            '$1 == device { print $2 }'
        )
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup subosito/flutter-action@v1
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.20'
    - name: Clean workspace
      run: flutter clean
    - name: create env file
      run: |
        touch assets/.env
        echo "APPCENTER_BUILD_ID=${{ secrets.APPCENTER_BUILD_ID }}" > assets/.env
        echo "APPCENTER_KEYSTORE_PASSWORD=${{ secrets.APPCENTER_KEYSTORE_PASSWORD }}" >> assets/.env
        echo "APPCENTER_KEY_ALIAS=${{ secrets.APPCENTER_KEY_ALIAS }}" >> assets/.env
        echo "APPCENTER_KEY_PASSWORD=${{ secrets.APPCENTER_KEY_PASSWORD }}" >> assets/.env
        echo "JIRA_AUTH=${{ secrets.JIRA_AUTH }}" > assets/.env
        echo "JIRA_PROJECT_KEY=${{ secrets.JIRA_PROJECT_KEY }}" >> assets/.env
        echo "MAP_BOX_ACCESS_TOKEN=${{ secrets.MAP_BOX_ACCESS_TOKEN }}" >> assets/.env
        echo "APPCENTER_SECRET_ANDROID=${{ secrets.APPCENTER_SECRET_ANDROID }}" >> assets/.env
        echo "APPCENTER_SECRET_IOS=${{ secrets.APPCENTER_SECRET_IOS }}" > assets/.env
        echo "APPCENTER_TOKEN_ANDROID=${{ secrets.APPCENTER_TOKEN_ANDROID }}" >> assets/.env
        echo "APPCENTER_TOKEN_IOS=${{ secrets.APPCENTER_TOKEN_IOS }}" >> assets/.env
        echo "APPCENTER_APPID_IOS=${{ secrets.APPCENTER_APPID_IOS }}" >> assets/.env        
    - name: "Run Flutter Driver tests"
      run: "flutter drive --target=test_driver/app.dart"
    - name: Build IOS
      run: flutter build ios --release --no-codesign
    - name: Upload IPA
      uses: actions/upload-artifact@master
      with:
        name: ios-build
        path: build/ios/iphoneos
