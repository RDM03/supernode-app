name: flutter drive
on:
  pull_request:
  workflow_dispatch:

jobs:
  drive_ios:
    name: Drive flutter (IOS)
    strategy:
      matrix:
        device:
        - "iPhone SE (2nd generation) (14.2)"
        - "iPhone 11 Pro Max (14.2)"
      fail-fast: false
    runs-on: ["self-hosted", "macOS"]
    steps:
    - name: "List all simulators"
      run: "xcrun xctrace list devices"
    - name: "Start Simulator"
      run: |
        xcrun xctrace list devices &> /tmp/devices.list
        grep '${{ matrix.device }}' /tmp/devices.list | cut -d '(' -f 3 | cut -d ')' -f 1 > /tmp/iosdeviceid.tmp
        UDID=$(cat /tmp/iosdeviceid.tmp)
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
      continue-on-error: true
    - name: Checkout
      uses: actions/checkout@v1
      with:
        ref: ${{ github.ref }}
    - name: Setup subosito/flutter-action@v1
      uses: subosito/flutter-action@v1
      with:
        channel: beta
        flutter-version: '1.23.0'
    - name: Clean workspace
      run: flutter clean
    - name: create env file
      run: touch assets/.env
    - name: "Run Flutter Driver tests"
      run: flutter drive --target=test_driver/app.dart
      env:
        APPCENTER_BUILD_ID: ${{ secrets.APPCENTER_BUILD_ID}}
        APPCENTER_KEYSTORE_PASSWORD: ${{ secrets.APPCENTER_KEYSTORE_PASSWORD}}
        APPCENTER_KEY_ALIAS: ${{ secrets.APPCENTER_KEY_ALIAS}}
        APPCENTER_KEY_PASSWORD: ${{ secrets.APPCENTER_KEY_PASSWORD}}
        MAP_BOX_ACCESS_TOKEN: ${{ secrets.MAP_BOX_ACCESS_TOKEN }}
        TOKEN: ${{ secrets.TOKEN }}
        DRIVE_MINER_SERIAL: ${{ secrets.DRIVE_MINER_SERIAL }}
        DRIVE_MXCTEST_OTP_KEY: ${{ secrets.DRIVE_MXCTEST_OTP_KEY }}
        DRIVE_TESTING_USER: ${{ secrets.DRIVE_TESTING_USER }}
        DRIVE_MXCTEST_PASSWORD: ${{ secrets.DRIVE_MXCTEST_PASSWORD }}
        DRIVE_ENLINK_OTP_KEY: ${{ secrets.DRIVE_ENLINK_OTP_KEY }}
        DRIVE_ENLINK_PASSWORD: ${{ secrets.DRIVE_ENLINK_PASSWORD }}
        DRIVE_MATCHXEU_OTP_KEY: ${{ secrets.DRIVE_MATCHXEU_OTP_KEY }}
        DRIVE_MATCHXEU_PASSWORD: ${{ secrets.DRIVE_MATCHXEU_PASSWORD }}
        DRIVE_MXCBUILD_OTP_KEY: ${{ secrets.DRIVE_MXCBUILD_OTP_KEY }}
        DRIVE_MXCBUILD_PASSWORD: ${{ secrets.DRIVE_MXCBUILD_PASSWORD }}
        DRIVE_SEJONG_OTP_KEY: ${{ secrets.DRIVE_SEJONG_OTP_KEY }}
        DRIVE_SEJONG_PASSWORD: ${{ secrets.DRIVE_SEJONG_PASSWORD }}
        DRIVE_XY_OTP_KEY: ${{ secrets.DRIVE_XY_OTP_KEY }}
        DRIVE_XY_PASSWORD: ${{ secrets.DRIVE_XY_PASSWORD }}
        ENVIRONMENT: ${{ secrets.ENVIRONMENT }}

  drive_android:
    name: Drive flutter (Android)
    strategy:
      matrix:
        device:
        - "Pixel_3a_API_30"
        - "Pixel_3_API_29"
      fail-fast: false
    runs-on: ["self-hosted", "android"]
    steps:
    - name: "List all simulators"
      run: "/usr/local/bin/emulator -list-avds"
    - name: "Start adb-server"
      run: /usr/local/bin/adb start-server   
    - name: "Start Simulator" 
      run: "/usr/local/bin/emulator -avd ${{ matrix.device }} -id ${{ matrix.device }} -no-audio -gpu host &"
      continue-on-error: true
    - name: Checkout
      uses: actions/checkout@v1
      with:
        ref: ${{ github.ref }}
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '8.x' #https://github.com/subosito/flutter-action/issues/58
    - name: Setup subosito/flutter-action@v1
      uses: subosito/flutter-action@v1
      with:
        channel: beta
        flutter-version: '1.23.0'
    - name: Clean workspace
      run: flutter clean
    - name: create env file
      run: |
        touch assets/.env
        echo "APPCENTER_BUILD_ID=${{ secrets.APPCENTER_BUILD_ID }}" > assets/.env
        echo "APPCENTER_KEYSTORE_PASSWORD=${{ secrets.APPCENTER_KEYSTORE_PASSWORD }}" >> assets/.env
        echo "APPCENTER_KEY_ALIAS=${{ secrets.APPCENTER_KEY_ALIAS }}" >> assets/.env
        echo "APPCENTER_KEY_PASSWORD=${{ secrets.APPCENTER_KEY_PASSWORD }}" >> assets/.env
        echo "JIRA_AUTH=${{ secrets.JIRA_AUTH }}" > assets/.env
        echo "JIRA_PROJECT_KEY=${{ secrets.JIRA_PROJECT_KEY }}" >> assets/.env
        echo "MAP_BOX_ACCESS_TOKEN=${{ secrets.MAP_BOX_ACCESS_TOKEN }}" >> assets/.env
        echo "APPCENTER_SECRET_ANDROID=${{ secrets.APPCENTER_SECRET_ANDROID }}" >> assets/.env
        echo "APPCENTER_SECRET_IOS=${{ secrets.APPCENTER_SECRET_IOS }}" > assets/.env
        echo "APPCENTER_TOKEN_ANDROID=${{ secrets.APPCENTER_TOKEN_ANDROID }}" >> assets/.env
        echo "APPCENTER_TOKEN_IOS=${{ secrets.APPCENTER_TOKEN_IOS }}" >> assets/.env
        echo "APPCENTER_APPID_IOS=${{ secrets.APPCENTER_APPID_IOS }}" >> assets/.env        
    - name: "Run Flutter Driver tests"
      run: |
        UDID=$(/usr/local/bin/adb devices | grep emulator |awk '{print$1}')
        flutter drive --target=test_driver/app.dart --flavor prod --device-id $UDID
      env:
        APPCENTER_BUILD_ID: ${{ secrets.APPCENTER_BUILD_ID}}
        APPCENTER_KEYSTORE_PASSWORD: ${{ secrets.APPCENTER_KEYSTORE_PASSWORD}}
        APPCENTER_KEY_ALIAS: ${{ secrets.APPCENTER_KEY_ALIAS}}
        APPCENTER_KEY_PASSWORD: ${{ secrets.APPCENTER_KEY_PASSWORD}}
        MAP_BOX_ACCESS_TOKEN: ${{ secrets.MAP_BOX_ACCESS_TOKEN }}
        TOKEN: ${{ secrets.TOKEN }}
        DRIVE_MINER_SERIAL: ${{ secrets.DRIVE_MINER_SERIAL }}
        DRIVE_MXCTEST_OTP_KEY: ${{ secrets.DRIVE_MXCTEST_OTP_KEY }}
        DRIVE_TESTING_USER: ${{ secrets.DRIVE_TESTING_USER }}
        DRIVE_MXCTEST_PASSWORD: ${{ secrets.DRIVE_MXCTEST_PASSWORD }}
        DRIVE_ENLINK_OTP_KEY: ${{ secrets.DRIVE_ENLINK_OTP_KEY }}
        DRIVE_ENLINK_PASSWORD: ${{ secrets.DRIVE_ENLINK_PASSWORD }}
        DRIVE_MATCHXEU_OTP_KEY: ${{ secrets.DRIVE_MATCHXEU_OTP_KEY }}
        DRIVE_MATCHXEU_PASSWORD: ${{ secrets.DRIVE_MATCHXEU_PASSWORD }}
        DRIVE_MXCBUILD_OTP_KEY: ${{ secrets.DRIVE_MXCBUILD_OTP_KEY }}
        DRIVE_MXCBUILD_PASSWORD: ${{ secrets.DRIVE_MXCBUILD_PASSWORD }}
        DRIVE_SEJONG_OTP_KEY: ${{ secrets.DRIVE_SEJONG_OTP_KEY }}
        DRIVE_SEJONG_PASSWORD: ${{ secrets.DRIVE_SEJONG_PASSWORD }}
        DRIVE_XY_OTP_KEY: ${{ secrets.DRIVE_XY_OTP_KEY }}
        DRIVE_XY_PASSWORD: ${{ secrets.DRIVE_XY_PASSWORD }}
        ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
